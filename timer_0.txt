/*
 * Cross platform timer routines
 * Thanks to John Tsiombikas
 */

#if defined(unix) || defined(__unix__)
#include <time.h>
#include <sys/time.h>

unsigned int GetMSec(void)
{
	static struct timeval tv, first_tv;

	gettimeofday(&tv, 0);

	if(first_tv.tv_sec == 0 && first_tv.tv_usec == 0) {
		first_tv = tv;
		return 0;
	}
	return (tv.tv_sec - first_tv.tv_sec) * 1000 + (tv.tv_usec - first_tv.tv_usec) / 1000;
}

#elif defined(WIN32) || defined(__WIN32__)
#include <windows.h>

unsigned int GetMSec(void)
{
	static unsigned int first_time;

	if(!first_time) {
		first_time = timeGetTime();
		return 0;
	}
	return timeGetTime() - first_time;
}

#else
#error "unsupported platform, or detection failed"
#endif
